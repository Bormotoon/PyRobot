# safe_eval.py (обновленный фрагмент)

import math
from identifiers import convert_hex_constants
from builtins import цел_в_лит, вещ_в_лит, лит_в_вещ, лит_в_цел, Цел, Вещ, Лог
from math_functions import (
    sqrt, abs_val, iabs, sign,
    sin_val, cos_val, tg, ctg, arcsin_val, arccos_val, arctg, arcctg,
    ln, lg, exp_val,
    min_val, max_val, imin, imax, div, mod, int_part,
    rnd, rand, irnd, irand, МАКСЦЕЛ, МАКСВЕЩ
)
from text_functions import длин, код, юникод, символ, юнисимвол

from string_utils import (
    верхний_регистр, нижний_регистр,
    позиция, поз, позиция_после, поз_после,
    вставить, заменить, удалить
)

from file_functions import (
    открыть_на_чтение, открыть_на_запись, открыть_на_добавление, закрыть,
    начать_чтение, конец_файла, есть_данные,
    установить_кодировку, можно_открыть_на_чтение, можно_открыть_на_запись,
    существует, является_каталогом, создать_каталог, удалить_файл, удалить_каталог,
    полный_путь, РАБОЧИЙ_КАТАЛОГ, КАТАЛОГ_ПРОГРАММЫ,
    НАЗНАЧИТЬ_ВВОД, НАЗНАЧИТЬ_ВЫВОД, консоль
)
from system_functions import ждать, время  # новый импорт


def safe_eval(expr, eval_env):
    expr = convert_hex_constants(expr)
    safe_globals = {
        "__builtins__": None,
        # Математические функции
        "sin": sin_val,
        "cos": cos_val,
        "sqrt": sqrt,
        "int": int_part,
        "float": float,
        # Функции преобразования чисел
        "цел_в_лит": цел_в_лит,
        "вещ_в_лит": вещ_в_лит,
        "лит_в_вещ": лит_в_вещ,
        "лит_в_цел": лит_в_цел,
        "Цел": Цел,
        "Вещ": Вещ,
        "Лог": Лог,
        # Дополнительные математические функции
        "abs": abs_val,
        "iabs": iabs,
        "sign": sign,
        "tg": tg,
        "ctg": ctg,
        "arcsin": arcsin_val,
        "arccos": arccos_val,
        "arctg": arctg,
        "arcctg": arcctg,
        "ln": ln,
        "lg": lg,
        "exp": exp_val,
        "min": min_val,
        "max": max_val,
        "imin": imin,
        "imax": imax,
        "div": div,
        "mod": mod,
        "rnd": rnd,
        "rand": rand,
        "irnd": irnd,
        "irand": irand,
        "МАКСЦЕЛ": МАКСЦЕЛ,
        "МАКСВЕЩ": МАКСВЕЩ,
        # Функции работы с текстом
        "длин": длин,
        "код": код,
        "юникод": юникод,
        "символ": символ,
        "юнисимвол": юнисимвол,
        # Функции обработки строк
        "верхний регистр": верхний_регистр,
        "нижний регистр": нижний_регистр,
        "позиция": позиция,
        "поз": поз,
        "позиция после": позиция_после,
        "поз после": поз_после,
        "вставить": вставить,
        "заменить": заменить,
        "удалить": удалить,
        # Функции работы с файлами
        "открыть на чтение": открыть_на_чтение,
        "открыть на запись": открыть_на_запись,
        "открыть на добавление": открыть_на_добавление,
        "закрыть": закрыть,
        "начать чтение": начать_чтение,
        "конец файла": конец_файла,
        "есть данные": есть_данные,
        "установить кодировку": установить_кодировку,
        "можно открыть на чтение": можно_открыть_на_чтение,
        "можно открыть на запись": можно_открыть_на_запись,
        "существует": существует,
        "является каталогом": является_каталогом,
        "создать каталог": создать_каталог,
        "удалить_файл": удалить_файл,
        "удалить_каталог": удалить_каталог,
        "полный путь": полный_путь,
        "РАБОЧИЙ КАТАЛОГ": РАБОЧИЙ_КАТАЛОГ,
        "КАТАЛОГ ПРОГРАММЫ": КАТАЛОГ_ПРОГРАММЫ,
        "НАЗНАЧИТЬ ВВОД": НАЗНАЧИТЬ_ВВОД,
        "НАЗНАЧИТЬ ВЫВОД": НАЗНАЧИТЬ_ВЫВОД,
        "консоль": консоль,
        # Системные функции
        "ждать": ждать,
        "время": время,
    }
    return eval(expr, safe_globals, eval_env)


def get_eval_env(env):
    result = {}
    for var, info in env.items():
        result[var] = info.get("value")
    return result
