"""
Реализация встроенных функций для языка KUMIR, предназначенных для преобразования числовых значений в их
строковые представления, а также для преобразования строк в числовые и логические значения.
"""


# --- Новые внутренние (на английском) имена функций ---

def int_to_str(number):
    """
    Возвращает строковое представление целого числа.

    Прототип KUMIR:
      алг лит цел_в_лит(цел число)

    Параметры:
      number (int): Целое число, которое необходимо преобразовать в строку.

    Возвращаемое значение:
      str: Строковое представление переданного числа.
    """
    # Преобразуем целое число в строку с помощью встроенной функции str()
    return str(number)


def float_to_str(number):
    """
    Возвращает строковое представление числа с плавающей точкой.

    Прототип KUMIR:
      алг лит вещ_в_лит(вещ число)

    Параметры:
      number (float): Число с плавающей точкой для преобразования в строку.

    Возвращаемое значение:
      str: Строковое представление переданного числа.
    """
    # Преобразуем число с плавающей точкой в строку
    return str(number)


def str_to_float(string, success):
    """
    Преобразует заданную строку в число с плавающей точкой.
    Если строка содержит корректное представление числа, возвращает (число, "да");
    иначе возвращает (0.0, "нет").

    Прототип KUMIR:
      алг вещ лит_в_вещ(лит строка, рез лог успех)

    Примечание:
      В данной реализации переменная success не изменяется в окружении, а возвращается в виде части кортежа.
      Пользовательский код должен обрабатывать возвращаемый кортеж соответствующим образом.

    Параметры:
      string (str): Строка для преобразования.
      success: Параметр, предназначенный для обозначения успешности преобразования (не используется напрямую).

    Возвращаемое значение:
      tuple: Кортеж (числовое значение, индикатор успеха в виде строки "да" или "нет").
    """
    try:
        result = float(string)
        # Если преобразование успешно, возвращаем результат и строку "да"
        return result, "да"
    except:
        # В случае ошибки возвращаем 0.0 и строку "нет"
        return 0.0, "нет"


def str_to_int(string, success):
    """
    Преобразует заданную строку в целое число.
    Если строка корректно представляет целое число, возвращает (число, "да");
    иначе возвращает (0, "нет").

    Прототип KUMIR:
      алг цел лит_в_цел(лит строка, рез лог успех)

    Параметры:
      string (str): Строка для преобразования.
      success: Параметр, предназначенный для обозначения успешности преобразования (не используется напрямую).

    Возвращаемое значение:
      tuple: Кортеж (целое число, индикатор успеха в виде строки "да" или "нет").
    """
    try:
        result = int(string)
        # Успешное преобразование: возвращаем число и "да"
        return result, "да"
    except:
        # В случае ошибки возвращаем 0 и "нет"
        return 0, "нет"


def Int(string, default):
    """
    Преобразует заданную строку в целое число.
    Если строка не является корректным представлением целого числа, возвращает значение по умолчанию.

    Прототип KUMIR:
      алг цел Цел(лит строка, цел по умолчанию)

    Параметры:
      string (str): Строка для преобразования в целое число.
      default (int): Значение по умолчанию, которое возвращается, если преобразование не удалось.

    Возвращаемое значение:
      int: Преобразованное целое число или значение по умолчанию.
    """
    try:
        return int(string)
    except:
        return default


def Float(string, default):
    """
    Преобразует заданную строку в число с плавающей точкой.
    Если строка не является корректным представлением числа с плавающей точкой, возвращает значение по умолчанию.

    Прототип KUMIR:
      алг вещ Вещ(лит строка, вещ по умолчанию)

    Параметры:
      string (str): Строка для преобразования в число с плавающей точкой.
      default (float): Значение по умолчанию, возвращаемое при ошибке преобразования.

    Возвращаемое значение:
      float: Преобразованное число с плавающей точкой или значение по умолчанию.
    """
    try:
        return float(string)
    except:
        return default


def Bool(string, default):
    """
    Преобразует заданную строку в логическое значение.
    Распознает следующие строки как True: "да", "1", "истина";
    как False: "нет", "0", "ложь".
    Если строка не соответствует ни одному из этих вариантов, возвращает значение по умолчанию.

    Прототип KUMIR:
      алг лог Лог(лит строка, лог по умолчанию)

    Параметры:
      string (str): Строка для преобразования в логическое значение.
      default (bool): Значение по умолчанию, если строка не соответствует ожидаемым вариантам.

    Возвращаемое значение:
      bool: Преобразованное логическое значение или значение по умолчанию.
    """
    # Приводим строку к нижнему регистру и удаляем лишние пробелы
    s = str(string).strip().lower()
    if s in ["да", "1", "истина"]:
        return True
    elif s in ["нет", "0", "ложь"]:
        return False
    else:
        return default


# --- Алиасы для обратной совместимости (имена, как указано в документации KUMIR) ---

цел_в_лит = int_to_str  # Алиас для преобразования целого числа в строку
вещ_в_лит = float_to_str  # Алиас для преобразования числа с плавающей точкой в строку
лит_в_вещ = str_to_float  # Алиас для преобразования строки в число с плавающей точкой
лит_в_цел = str_to_int  # Алиас для преобразования строки в целое число
Цел = Int  # Алиас для функции преобразования строки в целое число с значением по умолчанию
Вещ = Float  # Алиас для функции преобразования строки в число с плавающей точкой с значением по умолчанию
Лог = Bool  # Алиас для функции преобразования строки в логическое значение
