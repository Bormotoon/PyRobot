"""
Модуль main.py
@description Основной исполняемый файл для интерпретатора языка KUMIR.
В этом модуле задается пример исходного кода программы на KUMIR, создается экземпляр интерпретатора,
выполняется интерпретация программы и выводятся результаты выполнения.
"""

from .interpreter import KumirLanguageInterpreter  # Импорт класса интерпретатора языка KUMIR

if __name__ == "__main__":
    # Пример исходного кода программы на языке KUMIR.
    # В примере присутствуют:
    #   - Вступительная часть с объявлениями переменных, присваиваниями и выводом.
    #   - Основной алгоритм (без имени) с вычислением площади, командами перемещения робота,
    #     циклическими конструкциями, командой паузы, прерыванием выполнения и остановкой.
    #   - Вспомогательный алгоритм (с именем "сумма"), который выводит сумму двух чисел.
    #   - Вызов вспомогательного алгоритма.
    sample_code = r'''
    | Это вступление
    цел длина, ширина, лог условие, лит мой текст
    длина := 10
    ширина := 15
    условие := да
    мой текст := "Пример текста"
    вывод "Вступление выполнено. Текст: ", мой текст, нс

    | Это основной алгоритм (без имени)
    алг
    нач
      вывод "Площадь равна: ", (длина * ширина), нс
      влево
      вправо
      вверх
      вниз
      закрасить
      нц 3 раз
         вывод "В цикле", нс
         пауза
         вывод "Циклический шаг", нс
         выход
      кц
      вывод "После цикла", нс
      вывод "Прерывание алгоритма", нс
      стоп
      вывод "Эта строка не выполнится", нс
    кон

    | Это вспомогательный алгоритм (вызовется из основного)
    алг сумма(вещ а, вещ б)
    нач
      вывод "Сумма = ", (а + б), нс
    кон

    | Вызов вспомогательной подпрограммы
    сумма(2.4, 7.6)
    '''

    # Создание экземпляра интерпретатора с примером исходного кода
    interpreter = KumirLanguageInterpreter(sample_code)

    # Интерпретация (парсинг и выполнение программы)
    result = interpreter.interpret()

    # Вывод результата работы интерпретатора:
    # результат включает обновленное окружение переменных, позицию робота и список закрашенных клеток.
    print("Результат:", result)
