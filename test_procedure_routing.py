#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –≤—ã–∑–æ–≤–æ–≤ –ø—Ä–æ—Ü–µ–¥—É—Ä.
–≠—Ç–æ—Ç —Ç–µ—Å—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∏ –µ—ë –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.
"""

from pyrobot.backend.kumir_interpreter.runtime_utils import interpret_kumir

def test_procedure_routing_problem():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä...")
    
    code = """
–∞–ª–≥ —É–¥–≤–æ–∏—Ç—å(–∞—Ä–≥—Ä–µ–∑ —Ü–µ–ª —á–∏—Å–ª–æ)
–Ω–∞—á
  —á–∏—Å–ª–æ := —á–∏—Å–ª–æ * 2
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  —Ü–µ–ª x
  x := 10
  —É–¥–≤–æ–∏—Ç—å(x)
  –≤—ã–≤–æ–¥ x
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    try:
        result = interpret_kumir(code)
        print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
        if "20" in result:
            print("üéâ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üìù –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π:")
        print("   - –í—ã–∑–æ–≤ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã '—É–¥–≤–æ–∏—Ç—å(x)' –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ")
        print("   - Expression evaluator –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞") 
        print("   - –ù–æ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –µ—ë —Å –æ—à–∏–±–∫–æ–π 'procedures cannot be used in expressions'")
        print("   - –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å visitAssignmentStatement –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏")

def test_function_vs_procedure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏...")
    
    code = """
–∞–ª–≥ —Ü–µ–ª —É–¥–≤–æ–∏—Ç—å_—Ñ—É–Ω–∫—Ü–∏—è(–∞—Ä–≥ —Ü–µ–ª —á–∏—Å–ª–æ)
–Ω–∞—á
  –∑–Ω–∞—á := —á–∏—Å–ª–æ * 2
–∫–æ–Ω

–∞–ª–≥ —É–¥–≤–æ–∏—Ç—å_–ø—Ä–æ—Ü–µ–¥—É—Ä–∞(–∞—Ä–≥—Ä–µ–∑ —Ü–µ–ª —á–∏—Å–ª–æ)
–Ω–∞—á
  —á–∏—Å–ª–æ := —á–∏—Å–ª–æ * 2
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  —Ü–µ–ª x, y
  x := 10
  y := 10
  
  // –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö
  y := —É–¥–≤–æ–∏—Ç—å_—Ñ—É–Ω–∫—Ü–∏—è(x)
  –≤—ã–≤–æ–¥ y
  
  // –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞
  —É–¥–≤–æ–∏—Ç—å_–ø—Ä–æ—Ü–µ–¥—É—Ä–∞(x)
  –≤—ã–≤–æ–¥ x
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    try:
        result = interpret_kumir(code)
        print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
        lines = result.strip().split('\n')
        if len(lines) >= 2 and lines[0] == "20" and lines[1] == "20":
            print("üéâ –ò —Ñ—É–Ω–∫—Ü–∏—è, –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            print("‚ùå –ß—Ç–æ-—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_procedure_routing_problem()
    test_function_vs_procedure()
