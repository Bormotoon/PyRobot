#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ AlgorithmManager
"""

from pyrobot.backend.kumir_interpreter.definitions import AlgorithmManager, AlgorithmDefinition, Parameter

def test_algorithm_manager():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é AlgorithmManager...")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
    manager = AlgorithmManager()
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    params = [
        Parameter(name="x", param_type="—Ü–µ–ª", mode="–∞—Ä–≥"),
        Parameter(name="y", param_type="—Ü–µ–ª", mode="–∞—Ä–≥")
    ]
      # –°–æ–∑–¥–∞–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    func_def = AlgorithmDefinition(
        name="—Å—É–º–º–∞",
        parameters=params,
        return_type="—Ü–µ–ª",
        body_context=None,  # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç—É—Ç –±—É–¥–µ—Ç ANTLR –∫–æ–Ω—Ç–µ–∫—Å—Ç
        local_declarations=[]
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    manager.register_algorithm(func_def)
    print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é: {func_def.name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫
    found_func = manager.get_algorithm("—Å—É–º–º–∞")
    print(f"‚úÖ –ù–∞—à–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é: {found_func.name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–∞
    is_func = manager.is_function("—Å—É–º–º–∞")
    print(f"‚úÖ –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è: {is_func}")
    
    is_proc = manager.is_procedure("—Å—É–º–º–∞")
    print(f"‚úÖ –≠—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞: {is_proc}")
      # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É
    proc_def = AlgorithmDefinition(
        name="–≤—ã–≤–µ—Å—Ç–∏_—Å—É–º–º—É",
        parameters=params,
        return_type=None,
        body_context=None,
        local_declarations=[]
    )
    
    manager.register_algorithm(proc_def)
    print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É: {proc_def.name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
    all_algorithms = manager.get_all_algorithms()
    print(f"‚úÖ –í—Å–µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤: {len(all_algorithms)}")
    for algo in all_algorithms:
        print(f"   - {algo.name} ({'—Ñ—É–Ω–∫—Ü–∏—è' if algo.is_function else '–ø—Ä–æ—Ü–µ–¥—É—Ä–∞'})")
    
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    test_algorithm_manager()
