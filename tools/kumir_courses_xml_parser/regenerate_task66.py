#!/usr/bin/env python3
import json
from kumir_pipeline import KumirToPythonPipeline

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
with open('kumir_python_solutions/tasks_data.json', 'r', encoding='utf-8') as f:
    tasks = json.load(f)

# –°–æ–∑–¥–∞–µ–º pipeline –¥–ª—è –∫—É—Ä—Å–∞ –º–∞—Å—Å–∏–≤–æ–≤
pipeline = KumirToPythonPipeline('/Users/bormotoon/VSCodeProjects/PyRobot/polyakov_kurs_work/–ü–æ–ª—è–∫–æ–≤_–ú–∞—Å—Å–∏–≤—ã.work.xml')

# –ù–∞–π–¥–µ–º –∑–∞–¥–∞—á—É 66
task66 = None
for task in tasks:
    if task['task_id'] == '66':
        task66 = task
        break

if task66:
    print('üîß –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –ó–ê–î–ê–ß–ò 66')
    print('=' * 50)
    
    # –û—Ç–ª–∞–¥–∏–º –∫–∞–∂–¥—ã–π —à–∞–≥
    task_type = pipeline.detect_task_type(task66)
    print(f'1. Detected task_type: {task_type}')
    
    short_name = pipeline.clean_task_name_for_filename(task66['task_name'], task66['task_id'], task_type)
    print(f'2. Short name: {short_name}')
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥
    print('3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Python –∫–æ–¥...')
    python_code = pipeline.generate_python_solution(task66)
    
    print('\n4. –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞:')
    for i, line in enumerate(python_code.split('\n')[:10]):
        print(f'   {i+1:2}: {line}')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    filename = f"{task66['task_id']}_{short_name}.py"
    filepath = f"kumir_python_solutions/python_solutions/{filename}"
    
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(python_code)
    
    print(f'\n‚úÖ –§–∞–π–ª {filename} —Å–æ–∑–¥–∞–Ω')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    print('5. –¢–µ—Å—Ç–∏—Ä—É–µ–º...')
    try:
        success, output = pipeline.test_python_file(filepath)
        print(f'   –†–µ–∑—É–ª—å—Ç–∞—Ç: {"‚úÖ SUCCESS" if success else "‚ùå FAILED"}')
        if output:
            print(f'   –í—ã–≤–æ–¥: {output[:200]}...' if len(output) > 200 else f'   –í—ã–≤–æ–¥: {output}')
    except Exception as e:
        print(f'   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}')
        
else:
    print('‚ùå Task 66 not found!')
