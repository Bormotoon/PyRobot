#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

from pyrobot.backend.kumir_interpreter.runtime_utils import interpret_kumir

def test_factorial_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª...")
    
    code = """
–∞–ª–≥ —Ü–µ–ª —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª(–∞—Ä–≥ —Ü–µ–ª n)
–Ω–∞—á
  –µ—Å–ª–∏ n <= 1
    —Ç–æ –∑–Ω–∞—á := 1
    –∏–Ω–∞—á–µ –∑–Ω–∞—á := n * —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª(n - 1)
  –≤—Å–µ
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  –≤—ã–≤–æ–¥ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª(5)
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    result = interpret_kumir(code)
    
    print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
    print()

def test_string_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏...")
    
    code = """
–∞–ª–≥ –ª–∏—Ç –ø–µ—Ä–≤—ã–π_—Å–∏–º–≤–æ–ª(–∞—Ä–≥ –ª–∏—Ç —Å—Ç—Ä–æ–∫–∞)
–Ω–∞—á
  –µ—Å–ª–∏ –¥–ª–∏–Ω(—Å—Ç—Ä–æ–∫–∞) > 0
    —Ç–æ –∑–Ω–∞—á := —Å—Ç—Ä–æ–∫–∞[1]
    –∏–Ω–∞—á–µ –∑–Ω–∞—á := ' '
  –≤—Å–µ
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  –≤—ã–≤–æ–¥ –ø–µ—Ä–≤—ã–π_—Å–∏–º–≤–æ–ª("–ü—Ä–∏–≤–µ—Ç")
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    result = interpret_kumir(code)
    
    print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
    print()

def test_boolean_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –ª–æ–≥–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é...")
    
    code = """
–∞–ª–≥ –ª–æ–≥ —á–µ—Ç–Ω–æ–µ(–∞—Ä–≥ —Ü–µ–ª —á–∏—Å–ª–æ)
–Ω–∞—á
  –∑–Ω–∞—á := (—á–∏—Å–ª–æ mod 2 = 0)
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  –≤—ã–≤–æ–¥ —á–µ—Ç–Ω–æ–µ(10)
  –≤—ã–≤–æ–¥ —á–µ—Ç–Ω–æ–µ(7)
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    result = interpret_kumir(code)
    
    print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
    print()

def test_multiple_parameters():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
    
    code = """
–∞–ª–≥ –≤–µ—â —Å—Ä–µ–¥–Ω–µ–µ(–∞—Ä–≥ —Ü–µ–ª a, –∞—Ä–≥ —Ü–µ–ª b, –∞—Ä–≥ —Ü–µ–ª c)
–Ω–∞—á
  –∑–Ω–∞—á := (a + b + c) / 3.0
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  –≤—ã–≤–æ–¥ —Å—Ä–µ–¥–Ω–µ–µ(10, 20, 30)
–∫–æ–Ω
"""
    
    print("üìÑ –ö–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(code)
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    
    result = interpret_kumir(code)
    
    print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}")
    print()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π...\n")
    
    # –ü—Ä–æ—Å—Ç–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–±–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç)
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ—Å—Ç—É—é –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é...")
    code = """
–∞–ª–≥ —Ü–µ–ª —Å—É–º–º–∞(–∞—Ä–≥ —Ü–µ–ª x, –∞—Ä–≥ —Ü–µ–ª y)
–Ω–∞—á
  –∑–Ω–∞—á := x + y
–∫–æ–Ω

–∞–ª–≥ –≥–ª–∞–≤–Ω—ã–π
–Ω–∞—á
  –≤—ã–≤–æ–¥ —Å—É–º–º–∞(2, 3)
–∫–æ–Ω
"""
    result = interpret_kumir(code)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.strip()}\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π
    test_multiple_parameters()
    test_boolean_function()
    
    # –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Å—Ç—ã (–º–æ–≥—É—Ç –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)
    try:
        test_factorial_function()
    except Exception as e:
        print(f"‚ùå –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}\n")
    
    try:    
        test_string_function()
    except Exception as e:
        print(f"‚ùå –°—Ç—Ä–æ–∫–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}\n")
    
    print("üéâ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
